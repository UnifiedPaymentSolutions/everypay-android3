apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
version = libraryVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
}


publishing {
    publications {
        EveryPayPublication(MavenPublication) {
            artifact(artifactDir)
            artifactId artifactName
            version libraryVersion
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
                // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
bintray {

    user = bintrayUserEnvVar != null ? bintrayUserEnvVar : ""
    key = bintrayKeyEnvVar != null ? bintrayKeyEnvVar : ""
    publications = ['EveryPayPublication']
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = userOrganization
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = false //Determines whether to GPG sign the files. The default is false
            }
        }
    }
}